<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    
    <title>MongoDB - General purpose database for GIANT IDEAS</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
    <link rel="stylesheet" href="css/mystyle.css">
  </head>
  <body>
 
 <script>
 // support functions here

 function rate_business(businessId, rating)
 {

     var $myDiv="Rating" + businessId;
     $('#'+$myDiv).prop('innerHTML',rating);

 }
 function recommend()
 {
   
      var Ratings=""; // Store Ratings
      var first=true;

     $('[id^=Ratin]').each(function(item) {
    var number = this.id.split('g').pop();
 
        if (first)
        {
            first=false;
        }
        else
        {
            Ratings+=",";
        }
   
      
        Ratings+="{ \"businessId\": " + number + ", \"review_stars\": " + this.innerHTML + ",\"userId\":3000000 }";

     });

     ClearRecommendations();
    
         $.ajax({
            url: "/SparkIntegration/UploadRecommendations",
           // headers: headers,  use this for special header info like security auth
            method: 'POST',
            data:  JSON.stringify({MyRatings:Ratings}),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            // This prevents JQuery from trying to append the form as a querystring
            processData: false,
        
         }).done(function(data)
            {
                   //Get rid of spinning circle
                  // $("#loading_gif").hide();
                document.getElementById('lblErrorMessage').innerHTML = '';
                 $("#HangOnItsCrunchingMessage").show();
                 $("#ViewRecommendationsDIV").hide();
            
            }
            ).fail(function(data)
            {
                document.getElementById('lblErrorMessage').innerHTML = 'Unable to query data source, please try again later. Error: ' + data.responseText ;
                return;
            }); 
     
 }
 function ViewRecomendations()
 {
       $.ajax({
            url: "/SparkIntegration/GetRecommendations",
           // headers: headers,  use this for special header info like security auth
            method: 'GET',
            data:  {}, // This is where we may want to send a unique client/session token in future to support multiple users JSON.stringify({MyRatings:Ratings}),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            // This prevents JQuery from trying to append the form as a querystring
            processData: false,
        
         }).done(function(data)
            {
                $('#TableSparkResults').empty();
                document.getElementById('lblErrorMessage').innerHTML = '';
                var table = document.getElementById("TableSparkResults");
                
                var ArrayHeader = ["Business Name","Review Stars"];
                var thead = document.createElement('thead');
                thead.setAttribute("style", "background-color:lightblue;color:black;");
                
                table.appendChild(thead);

                for(var i=0;i<ArrayHeader.length;i++){
                    thead.appendChild(document.createElement("th")).
                    appendChild(document.createTextNode(ArrayHeader[i]));
                }

             for (var i=0;i<data.length;i++)
                        {
             
                          var row = table.insertRow(0);
                          row.insertCell(0).innerHTML=data[i].businessName;
                          row.insertCell(1).innerHTML=data[i].review_stars;
               
                        }
                         //Auto scroll once the table is built
                         var v=$('#ViewRecommendationsDIV');
                          $('html,body').animate({scrollTop: v.offset().top},'slow');
            }
            ).fail(function(data)
            {
              document.getElementById('lblErrorMessage').innerHTML = 'Unable to query data source, please try again later. Error: ' + data.responseText ;
              return;
            }); 
 }

function ClearRecommendations()
{
     $.ajax({
            url: "/SparkIntegration/ClearRecommendations",
           // headers: headers,  use this for special header info like security auth
            method: 'POST',
         //   data:  {}, // This is where we may want to send a unique client/session token in future to support multiple users JSON.stringify({MyRatings:Ratings}),
            contentType: "application/json; charset=utf-8",
        //    dataType: "json",
            // This prevents JQuery from trying to append the form as a querystring
            processData: false,
        
         }).done(function(data)
            {
               $("#TableSparkResults").empty();
               $("#ViewRecommendationsDIV").hide();
              // $("#ViewRecomendationsButton").prop('disabled', true);
               document.getElementById('lblErrorMessage').innerHTML = '';
            
            }
            ).fail(function(data)
            {
            document.getElementById('lblErrorMessage').innerHTML = 'Unable to query data source, please try again later. Error: ' + data.responseText ;
            return;
            });
}

function CheckIfUserHasRecommendations()
{
     console.log("Checking...");

      $.ajax({
            url: "/SparkIntegration/AnyRecommendations",
           // headers: headers,  use this for special header info like security auth
            method: 'GET',
          //  data:  {}, // This is where we may want to send a unique client/session token in future to support multiple users JSON.stringify({MyRatings:Ratings}),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            // This prevents JQuery from trying to append the form as a querystring
            processData: false,
        
         }).done(function(data)
            {
                console.log("HasResults=" + data.HasRecommendations);
                console.log("IsRunning=" + data.IsRunning);
                
                if (data.HasRecommendations==1)
                {
                    $("#ViewRecommendationsDIV").show();
                    // $("#ViewRecomendationsButton").prop('disabled',false);
                }
                else{
                    $("#ViewRecommendationsDIV").hide();
                   // $("#ViewRecomendationsButton").prop('disabled',true);
                }
                if (data.IsRunning==0)
                {
                    $("#HangOnItsCrunchingMessage").hide();
                }
                if (data.IsRunning==1) //Spark job is running
                {
                    $("#HangOnItsCrunchingMessage").show();
                }
                if (data.IsRunning==2)  //Spark job failed
                {
                    $("#HangOnItsCrunchingMessage").hide();
                    $("#lblErrorAlert").show();
                }

            })
            .fail(function(err)
            {
               document.getElementById('lblErrorMessage').innerHTML = 'Error determining if recommendations or spark job is running - ' + err.responseText;
            });
}

window.onload = function () {
    
    CheckIfUserHasRecommendations();

    var timer = setInterval(CheckIfUserHasRecommendations, 7000);
}


 </script>
 
  </head>
  <body> <!-- write onload function to check if data is present in db.collection("user_recommendations"), if so enable the button,-->


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

    <nav class="navbar navbar-inverse">
    <div class="container">
        <div class="navbar-header">
            <a class="navbar-brand" href="#"><img class="MongoImage" src="images/mongodb_logo3.png"></a>
        </div>
    </div>
    </nav>

    <div class="container">  
    <div class="row">
    <div class="col-sm-3 col-md-3 col-lg-3">

    <div class="sidebar">
      <div class="well">   
       <div class="list-group">
          <a href="/" class="list-group-item list-group-item-info">MongoDB<br/><I>A General Purpose Database</I></a>
       
       </div>
        <div class="list-group">
           <a href="#" class="list-group-item list-group-item-success">Advanced Search</a>
           <a href="/FacetSearch" class="list-group-item">Faceted Search</a>
            <a href="/TextSearch" class="list-group-item">Text Search</a>
            <a href="/GraphSearch" class="list-group-item">Graph Queries</a>
            <a href="/GeoSearch" class="list-group-item">Geo-spatial Search</a>
          </div>

          <div class="list-group">
          <a href="#" class="list-group-item list-group-item-success">Data Analytics</a>
            <a href="/SparkIntegration" class="list-group-item active">Spark Integration</a>
            <a href="/Reporting" class="list-group-item">Reporting Tools</a>
          </div>
          <div class="list-group">
          <a href="#" class="list-group-item list-group-item-success">Relational-like</a>
            <a href="/Constraints" class="list-group-item">Constraints</a>
            <a href="/Views" class="list-group-item">Views</a>
             <a href="/Joins" class="list-group-item">Joins</a>
          </div>
       
       
       </div>
      </div> 
      </div> <!--col-sm-6-->

      <div class="col-sm-9 col-md-9 col-lg-9">
      <div class="content">
        <div class="hero-group">
            <h2>Spark Integration</h2>
            <p>Apache Spark allows you to perform advanced analyticals on data stored within MongoDB!</p>
            <p>To see it in action give ratings to the following 10 businesses. These ratings will be modeled using Spark against a global user ratings data created by large number of users. When the calcualtion is complete you will have business recommendations for you! </p>
            
            <div class="form-group">
                <p>Please rate the following 10 businesses on a scale of 1( least) to 5 (best)</p>
                    
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Business Name</th>
                            <th>Rating</th>
                            <th>Your Rating</th>
                        </tr>
                        </thead>
                        <tbody>
                       
                    <% ResultSet.forEach(function (item) { %>
                        <tr>
                        <td><%= item.business_name %></a></td>
                        <td><button type="button" name="rating_button" class="btn btn-default" onclick="rate_business(<%= item.businessId%>,1)">1</button>&nbsp;&nbsp;
                        <button type="button" name="rating_button" class="btn btn-default" onclick="rate_business(<%= item.businessId%>,2)">2</button>&nbsp;&nbsp;
                        <button type="button" name="rating_button" class="btn btn-default" onclick="rate_business(<%= item.businessId%>,3)">3</button>&nbsp;&nbsp;
                        <button type="button" name="rating_button" class="btn btn-default" onclick="rate_business(<%= item.businessId%>,4)">4</button>&nbsp;&nbsp;
                        <button type="button" name="rating_button" class="btn btn-default" onclick="rate_business(<%= item.businessId%>,5)">5</button>
                        </td>
                        <td style="text-align:center">
                        <div id="Rating<%= item.businessId%>">3</div>
                        </td>
                        </tr>
                        <% }) %>
                         </tbody>
                        </table>

                         <button type="button" class="btn btn-default" id="submitRecommendations" onclick="recommend()" style="border:solid;" >Recommend Businesses</button> 
                         <br>
                         <div class="alert alert-info fade in" id="HangOnItsCrunchingMessage" <% if (IsRunning) { %> style="display:block" <% } else { %> style="display:none" <% } %>>
                            <strong>Hang on!!</strong> Spark is leveraging data stored in MongoDB to create your recommendations!<br>
                            This may take up to 5 minutes so check out other features and come back to this tab!  When Spark is finished, the View Recommendations button shown below will be enabled.
                        </div>
                         <div class="alert alert-danger" id="lblErrorAlert" style="display:none">
                         <strong>Opps!</strong> An error occured while trying to launch the Spark job.  Please try again.
                         </div> 
                        <br><br>
                        <div id="ViewRecommendationsDIV" style="display:none;">
                         <button type="button" class="btn btn-success" id="ViewRecomendationsButton" onclick="ViewRecomendations()">VIEW RECOMMENDATIONS</button> 
                         <br>
                         <table id="TableSparkResults" class="TextSearchResultsCSS" />
                           
                         <label id="lblErrorMessage"></label><br>
                           
                        </div>
            </div>
        </div> <!--hero-->
    </div> <!--content-->
    </div> <!-- col-sm -->

    </div> <!--row-->
    </div> <!--container-->
    
  </body>
</html>
